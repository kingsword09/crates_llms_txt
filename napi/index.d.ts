/* auto-generated by NAPI-RS */
/* eslint-disable */
/**
 * Get llms config by rustdoc all features
 *
 * # Arguments
 *
 * * `toolchain` - The Rust toolchain to use (e.g. "stable", "nightly")
 * * `manifest_path` - Path to the Cargo.toml file of the crate
 *
 * # Returns
 *
 * * `Option<LLMsConfig>` - The generated documentation configuration
 *
 * # Examples
 *
 * ```no_run
 * let config = get_llms_config_by_rustdoc_all_features("stable".to_string(), "path/to/Cargo.toml".to_string());
 * ```
 */
export declare function getLlmsConfigByRustdocAllFeatures(toolchain: string, manifestPath: string): LlMsConfig | null

/**
 * Get llms config by rustdoc features
 *
 * # Arguments
 *
 * * `toolchain` - The Rust toolchain to use (e.g. "stable", "nightly")
 * * `manifest_path` - Path to the Cargo.toml file of the crate
 * * `no_default_features` - Whether to include the default features
 * * `features` - The features to include
 *
 * # Returns
 *
 * * `Option<LLMsConfig>` - The generated documentation configuration
 *
 * # Examples
 *
 * ```no_run
 * let config = get_llms_config_by_rustdoc_features("stable".to_string(), "path/to/Cargo.toml".to_string(), false, Some(vec!["async".to_string()]));
 * ```
 */
export declare function getLlmsConfigByRustdocFeatures(toolchain: string, manifestPath: string, noDefaultFeatures: boolean, features?: Array<string> | undefined | null): LlMsConfig | null

/**
 * Get llms config by online
 *
 * # Arguments
 *
 * * `lib_name` - The name of the crate
 * * `version` - The version of the crate (optional)
 *
 * # Returns
 *
 * * `Option<LLMsConfig>` - The generated documentation configuration
 *
 * # Examples
 *
 * ```no_run
 * let config = get_llms_config_online("clap".to_string(), Some("4.5.39".to_string())).await?;
 * ```
 *
 */
export declare function getLlmsConfigOnline(libName: string, version?: string | undefined | null): Promise<LlMsConfig | null>

/**
 * Get llms config by online by url
 *
 * # Arguments
 *
 * * `url` - The url of the crate
 *
 * # Returns
 *
 * * `Option<LLMsConfig>` - The generated documentation configuration
 *
 * # Examples
 *
 * ```no_run
 * let config = get_llms_config_online_by_url("https://docs.rs/crate/clap/latest/json".to_string()).await?;
 * ```
 *
 */
export declare function getLlmsConfigOnlineByUrl(url: string): Promise<LlMsConfig | null>

export interface LlMsConfig {
  libName: string
  version: string
  sessions: string
  fullSessions: string
}
