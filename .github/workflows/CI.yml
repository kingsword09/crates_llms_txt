name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.14.0"
          run_install: false
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"
          cache-dependency-path: "**/pnpm-lock.yaml"

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cargo fmt
        run: cargo fmt -- --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Install dependencies
        run: pnpm install
        working-directory: ${{ github.workspace }}/napi

      - name: Oxlint
        run: pnpm lint
        working-directory: ${{ github.workspace }}/napi
  rust-release:
    runs-on: ubuntu-latest
    needs:
      - lint
    permissions:
      id-token: write     # Required for OIDC token exchange
    steps:
    - uses: actions/checkout@v4
    - uses: rust-lang/crates-io-auth-action@v1
      id: auth
    - run: |
        if git log -1 --pretty=%B | grep "^chore(rs-lib): release v[0-9]\+\.[0-9]\+\.[0-9]\+$";
        then
          cargo publish
          echo "Published stable release"
        else
          echo "Not a release commit, skipping publish"
        fi
      working-directory: ${{ github.workspace }}/rs-lib
      env:
        CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
